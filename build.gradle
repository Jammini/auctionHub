plugins {
  id 'java'
  id 'org.springframework.boot' version '3.1.2'
  id 'io.spring.dependency-management' version '1.1.2'
  id 'org.ec4j.editorconfig' version '0.0.3'
  id 'jacoco'
}

group = 'com.flab'
version = '0.0.1-SNAPSHOT'

java {
  sourceCompatibility = '17'
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'
  implementation 'org.springframework.security:spring-security-crypto'
  runtimeOnly 'com.h2database:h2'
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation group: 'org.junit-pioneer', name: 'junit-pioneer', version: '2.2.0'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
  useJUnitPlatform()
}

editorconfig {
  excludes = ['build']
}

check.dependsOn editorconfigCheck

// jacoco 설정 시작
// https://docs.gradle.org/current/userguide/jacoco_plugin.html#sec:configuring_the_jacoco_plugin
// 프로필을 설정하여 빌드를 할 수 있도록 주의. ex) SPRING_PROFILES_ACTIVE=local ./gradlew test
jacoco {
  // JaCoCo 버전
  toolVersion = '0.8.10'
  reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
  //  테스트결과 리포트를 저장할 경로 변경
//  default는 "${project.reporting.baseDir}/jacoco"
//  reportsDir = file("$buildDir/customJacocoReportDir")
}

test {
  finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
  dependsOn test // tests are required to run before generating the report

  reports {
    xml.required = false
    csv.required = false
    html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
  }
  finalizedBy jacocoTestCoverageVerification
}

jacocoTestCoverageVerification {
  violationRules {
    rule {
      enabled = true
      element = 'CLASS'
//      includes = ['org.gradle.*']

      limit {
        counter = 'LINE'
        value = 'COVEREDRATIO'
        minimum = 0.70
      }

      excludes = [
          '**.*Dto*',
          '**.*Config*',
          '**.*Exception*',
          '**.*Response*',
          '**.*Request*',
          '**.*Application*',
      ]
    }
  }
}
// jacoco 설정 끝
